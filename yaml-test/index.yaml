externalLibs:
  - ~/code/github/runow/yaml-test/external-libs/custom.js
vars:
  example: ABC
steps:
  # - Api#Summary: OK
  - !fragment ./examples/document/doc_comment_guide.yaml
  # - !fragment ./examples/async_jobs.yaml
  # - !fragment ./examples/upload.yaml
  # - !fragment ./examples/extension-mongo/index.yaml
  # - !fragment ./examples/loop/index.yaml
  # - !fragment ./examples/delay-each-step/index.yaml
  # - !fragment ./examples/script/javascript.yaml
  # - !fragment ./examples/rest_api.yaml
  # - !fragment ./examples/write-file/index.yaml
  # - !fragment ./examples/read-file/index.yaml
  # - !fragment ./examples/get_user_input.yaml
  # - Vars:
  #     url: https://fastlane.rubiconproject.com
  # - custom#echo1:
  #     title: echo title 1
# - custom#echo2:
#     title: echo title 2
# - Api.Summary:
#     title: Result
# - Vars:
#     name: thanh
# - Echo:
#     message: ${name}
# - Clear:

# - InputFile:
#     title: Read task json
#     path: ~/code/github/runow/.vscode/tasks.json
#     var: rs
# - OutputFile:
#     title: Save to task 1
#     content: ${rs}
#     saveTo: ~/code/github/runow/.vscode/tasks1.json
# - Echo: ${JSON.stringify(rs)}
# - Echo: OK MEN 1
# - Pause: 1s
# - Echo: OK MEN
# - Exec:
#     title: hello
#     args:
#       - yarn
#       - global
#       - dir
# - Api.Get:
#     title: test api
#     debug: true
#     baseURL: ${url}
#     url: /a/:api/:name
#     params:
#       api: api
#       name: fastlane.json
#     query:
#       account_id: 21150
#       site_id: 351284
#       zone_id: 1868548
#       size_id: 15
#       us_privacy: 1---
#       rp_schain: 1.0,1!ezoic.ai,65669379189918b982c5bc3b071a4ba0,1,,,
#       rf: https%3A%2F%2Fwww.learningcontainer.com%2Fwhat-is-a-json-file%2F%23How_to_open_a_JSON_file
#       tk_flint: pbjs_lite_v6.0.0
#       x_source: tid=2f61374f-0404-485c-84c9-71529e14000a
#       p_screen_res: 1920x1080
#       rp_secure: 1
#       rp_maxbids: 1
#       slots: 1
#       rand: 0.036512879719667324
#     headers:
#       content-type: application/json
#     # body:
#     #   file: !binary yaml-test/assets/data1.csv
#     validate:
#       - title: Test status
#         chai: ${expect(_.status).to.equal(200)}
#       - title: Test response
#         chai: ${expect(_.data).to.have.property('reason1')}
# - Echo: ${res}
