vars:
  lunarCalendarRemindDays:
    - pattern: "^1/\\d+$"
      des: Thắp hương mùng 1 âm lịch
    - pattern: "^15/\\d+$"
      des: Thắp hương ngày rằm
    - pattern: "^23/12$"
      des: Ngày ông Công, ông Táo
  lunarCalendarFiles:
    - https://raw.githubusercontent.com/doanthuanthanh88/yaml-scene/main/sharing/components/lunar-reminder/calender2022-2032.ics
extensions:
  LineReader: https://raw.githubusercontent.com/doanthuanthanh88/yaml-scene/main/sharing/code/File/LineReader.js
steps:
  - Group:
      loop: ${lunarCalendarFiles}
      steps:
        - Vars:
            file: ${$$.loopValue}
            fout: Gia đình ${$$.loopKey}.ics
            list: []

        - Script/Js: !function |
            ({ lunarCalendarRemindDays }) {
              lunarCalendarRemindDays = lunarCalendarRemindDays.map((d) => {
                d.pattern = new RegExp(d.pattern)
                return d
              })
              this.proxy.vars.$$remind = (date) => {
                const rs = lunarCalendarRemindDays.filter(d => d.pattern.test(date)).map(d => d.des)
                if (rs.length) return rs
                return undefined
              }
            }

        - Vars:
            lastSummary:
            newEvents:
            isStart: true
        - LineReader:
            path: ${file}
            onEachLine: !function |
              ({ file, list, $, $$remind, lastSummary, newEvents, isStart }) {
                return async (line, isFinished) => {
                  if (line === 'BEGIN:VEVENT') {
                    lastSummary = []
                  }
                  if (lastSummary) {
                    lastSummary.push(line.trim())
                  } else {
                    list.push(line)
                    return
                  }
                  if (line.startsWith('SUMMARY:')) {
                    let [,d] = line.split(':')
                    d = d.trim()
                    if (!isStart) {
                      isStart = line === `SUMMARY:14/3`
                    }
                    const des = $$remind(d)
                    if (des) {
                      newEvents = des
                    }
                  } else if(line.startsWith('RRULE:') || line.startsWith('UID:')) {
                    return
                  }
                  if (line === 'END:VEVENT') {
                    if(list.length >= 0 && isStart) {
                      list.push(lastSummary)
                      if (newEvents) {
                        newEvents.forEach(newEvent => {
                          list.push(lastSummary.reduce((sum, m) => {
                            if (m.startsWith('SUMMARY:')) {
                              sum.push(`SUMMARY:${newEvent}`)
                              sum.push(`RRULE:FREQ=DAILY;COUNT=1`)
                              
                              sum.push(`BEGIN:VALARM`)
                              sum.push(`TRIGGER:-PT15H`)
                              sum.push(`ATTACH;VALUE=URI:Chord`)
                              sum.push(`ACTION:AUDIO`)
                              sum.push(`END:VALARM`)

                              sum.push(`BEGIN:VALARM`)
                              sum.push(`TRIGGER:PT7H`)
                              sum.push(`ATTACH;VALUE=URI:Chord`)
                              sum.push(`ACTION:AUDIO`)
                              sum.push(`END:VALARM`)

                              sum.push(`END:VEVENT`)
                              sum.push(`BEGIN:VEVENT`)
                            } else {
                              sum.push(m)
                            }
                            return sum
                          }, []))
                        })
                      }
                    }
                    lastSummary = undefined
                    newEvents = undefined
                  }
                }
              }

        - File/Writer:
            path: ${fout}
            content: ${list.flat(10000).join('\n')}

        - Echo/Green: Please import or click into "${fout}" to add to google calendar or apple calendar
