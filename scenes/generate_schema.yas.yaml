- File/Reader:
    path: ./yas-schema.json
    adapters:
      - Json
    var: json

- Script/Js: |
    ({ json }) {
      const { templates, ...schema } = json
      function parse(obj) {
        if (Array.isArray(obj)) {
          obj.forEach(o => typeof o === 'object' && parse(o))
        } else if(typeof obj === 'object') {
          const keys = Object.keys(obj)
          keys.forEach(k => {
            let key = k
            if (key === '...') {
              Object.assign(obj, templates[obj[key]])
              delete obj[key]
            }
            if (obj[key] && typeof obj[key] === 'object') {
              parse(obj[key])
            }
          })
        }
      }

      parse(schema)

      this.proxy.vars.result = json
    }

- File/Writer:
    path: ../schema.json
    adapters:
      - Json:
          pretty: true
    content: ${result}

- File/Writer:
    path: ../schema.yas.json
    adapters:
      - Json:
          pretty: true
    content: ${result}
