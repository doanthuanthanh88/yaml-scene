{
  "$schema": "http://json-schema.org/draft-07/schema",
  "oneOf": [
    {
      "$ref": "#/definitions/Scenario"
    },
    {
      "$ref": "#/definitions/allOfSteps"
    }
  ],
  "definitions": {
    "Script": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Script/Js": {
          "description": "Run javascript in scenario",
          "oneOf": [
            {
              "$ref": "#/definitions/getVarString",
              "description": "Content script",
              "examples": [
                "Vars.name = 'hello'"
              ]
            },
            {
              "type": "object",
              "required": [
                "content"
              ],
              "properties": {
                "...": "defaultAttrs",
                "content": {
                  "$ref": "#/definitions/getVarString",
                  "description": "Content script",
                  "examples": [
                    "Vars.name = 'hello'"
                  ]
                }
              }
            }
          ]
        },
        "Script/Sh": {
          "description": "Run shell script in scenario",
          "oneOf": [
            {
              "$ref": "#/definitions/getVarString",
              "description": "Content script",
              "examples": [
                "Echo \"${user}\""
              ]
            },
            {
              "type": "object",
              "required": [
                "content"
              ],
              "properties": {
                "...": "defaultAttrs",
                "content": {
                  "$ref": "#/definitions/getVarString",
                  "description": "Content script",
                  "examples": [
                    "Echo \"${user}\""
                  ]
                }
              }
            }
          ]
        }
      }
    },
    "Sleep": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Sleep": {
          "title": "Sleep the current step",
          "oneOf": [
            {
              "...": "defaultAttrs",
              "type": "object",
              "description": "Sleep",
              "additionalProperties": false,
              "properties": {
                "title": {
                  "$ref": "#/definitions/getVar",
                  "description": "Description"
                },
                "time": {
                  "$ref": "#/definitions/time",
                  "description": "Sleep time"
                }
              }
            },
            {
              "$ref": "#/definitions/time",
              "description": "Sleep time"
            }
          ]
        }
      }
    },
    "Pause": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Pause": {
          "title": "Pause or sleep the current step",
          "oneOf": [
            {
              "...": "defaultAttrs",
              "type": "object",
              "description": "Pause",
              "additionalProperties": false,
              "properties": {
                "title": {
                  "$ref": "#/definitions/getVar",
                  "description": "Description"
                },
                "time": {
                  "$ref": "#/definitions/time",
                  "description": "Sleep time"
                }
              }
            },
            {
              "$ref": "#/definitions/time",
              "description": "Sleep time"
            },
            {
              "type": "null",
              "description": "Pause"
            }
          ]
        }
      }
    },
    "UserInput": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "UserInput": {
          "description": "Get input from user keyboard",
          "type": "array",
          "items": {
            "$ref": "#/definitions/userinput"
          }
        }
      }
    },
    "Exec": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Exec": {
          "type": "object",
          "description": "Execute external command",
          "required": [
            "args"
          ],
          "additionalProperties": false,
          "properties": {
            "...": "defaultAttrs",
            "title": {
              "$ref": "#/definitions/getVar"
            },
            "var": {
              "description": "Set result after execution",
              "$ref": "#/definitions/setVar"
            },
            "args": {
              "type": "array",
              "description": "The first is command name, then are agrs",
              "items": {
                "$ref": "#/definitions/getVar"
              }
            }
          }
        }
      }
    },
    "Validate": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Validate": {
          "type": "object",
          "description": "Use an existed validation or method from https://www.chaijs.com/",
          "required": [
            "title",
            "chai"
          ],
          "properties": {
            "...": "defaultAttrs",
            "title": {
              "$ref": "#/definitions/getVar",
              "description": "Validation name"
            },
            "chai": {
              "description": "ChaiJS validator",
              "$ref": "#/definitions/getVar",
              "examples": [
                "${expect(userInfo).to.have.property('display_name')}",
                "${userInfo.display_name.should.equal('thanh')}",
                "${assert.equal(userInfo.display_name, 'thanh')}"
              ]
            }
          }
        }
      }
    },
    "Scenario": {
      "type": "object",
      "description": "Includes all of steps in scenario",
      "required": [
        "steps"
      ],
      "properties": {
        "title": {
          "type": "string",
          "description": "Scenario title"
        },
        "description": {
          "type": "string",
          "description": "Scenario description"
        },
        "password": {
          "description": "Password to encrypt scenario file to share to someone",
          "type": "string"
        },
        "install": {
          "properties": {
            "dependencies": {
              "type": "array",
              "description": "NPM Packages name which need to install before to used in scenario",
              "items": {
                "type": "string"
              }
            },
            "localPath": {
              "type": "string",
              "description": "Location install NPM Packages"
            },
            "global": {
              "type": "boolean",
              "description": "Install to global dir or in localPath"
            },
            "isSave": {
              "type": "boolean",
              "description": "Save in package.json or not"
            }
          }
        },
        "logLevel": {
          "description": "Set log level to global",
          "$ref": "#/definitions/logLevel"
        },
        "extensions": {
          "type": "object",
          "description": "Map extension from source code in local",
          "examples": [
            {
              "yas-http": "./yas-http/src",
              "yas-grpc": "./yas-grpc/src",
              "my-ext": "./src"
            }
          ]
        },
        "steps": {
          "$ref": "#/definitions/allOfSteps"
        }
      }
    },
    "File": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "File/Reader": {
          "type": "object",
          "required": [
            "path",
            "var"
          ],
          "properties": {
            "...": "defaultAttrs",
            "adapters": {
              "description": "Adapter to parse content after read file",
              "$ref": "#/definitions/fileAdapter"
            },
            "path": {
              "type": "string",
              "description": "Path of input file"
            },
            "title": {
              "$ref": "#/definitions/getVar",
              "description": "Description"
            },
            "var": {
              "description": "Assign file content which after parsed to global variable",
              "$ref": "#/definitions/setVar"
            }
          }
        },
        "File/Writer": {
          "type": "object",
          "required": [
            "path",
            "content"
          ],
          "properties": {
            "...": "defaultAttrs",
            "adapters": {
              "description": "Adapter to parse content before write to file",
              "$ref": "#/definitions/fileAdapter"
            },
            "path": {
              "type": "string",
              "description": "Path of output file"
            },
            "title": {
              "$ref": "#/definitions/getVar",
              "description": "Description"
            },
            "content": {
              "$ref": "#/definitions/getVarString",
              "description": "File content which is parsed by adapters before write to file"
            }
          }
        }
      }
    },
    "Vars": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Vars": {
          "type": "object",
          "description": "Assign value to global variables"
        }
      }
    },
    "Templates": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Templates": {
          "description": "Declare steps which not used to run, just declared",
          "$ref": "#/definitions/allOfSteps"
        }
      }
    },
    "Group": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Group": {
          "required": [
            "title",
            "steps"
          ],
          "type": "object",
          "description": "Group steps",
          "properties": {
            "...": "defaultAttrs",
            "title": {
              "$ref": "#/definitions/getVar",
              "description": "Group title"
            },
            "description": {
              "$ref": "#/definitions/getVar",
              "description": "Group description"
            },
            "steps": {
              "$ref": "#/definitions/allOfSteps"
            }
          }
        }
      }
    },
    "echo": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "...": "defaultAttrs",
            "title": {
              "$ref": "#/definitions/getVar",
              "description": "Description"
            },
            "pretty": {
              "type": "boolean",
              "description": "Format object with breakline"
            },
            "schema": {
              "type": "boolean",
              "description": "Print object schema (NOT value)"
            },
            "color": {
              "type": "string",
              "description": "Set text color",
              "enum": [
                "red",
                "blue",
                "cyan",
                "green",
                "gray",
                "yellow"
              ],
              "default": "white"
            },
            "transforms": {
              "type": [
                "object",
                "string"
              ],
              "description": "Customize output by your code"
            },
            "message": {
              "description": "Message which is printed to screen",
              "$ref": "#/definitions/getVarAny"
            }
          }
        },
        {
          "$ref": "#/definitions/getVar"
        }
      ],
      "examples": [
        "${varName}"
      ]
    },
    "Echo": {
      "type": "object",
      "description": "Print data to screen",
      "additionalProperties": false,
      "properties": {
        "Echo/Schema": {
          "description": "Print object schema to screen",
          "$ref": "#/definitions/echo"
        },
        "Echo/Green": {
          "description": "Print data to screen with text color is Green",
          "$ref": "#/definitions/echo"
        },
        "Echo/Blue": {
          "description": "Print data to screen with text color is Blue",
          "$ref": "#/definitions/echo"
        },
        "Echo/Red": {
          "description": "Print data to screen with text color is Red",
          "$ref": "#/definitions/echo"
        },
        "Echo/Cyan": {
          "description": "Print data to screen with text color is Cyan",
          "$ref": "#/definitions/echo"
        },
        "Echo/Yellow": {
          "description": "Print data to screen with text color is Yellow",
          "$ref": "#/definitions/echo"
        },
        "Echo/Gray": {
          "description": "Print data to screen with text color is Gray",
          "$ref": "#/definitions/echo"
        },
        "Echo": {
          "$ref": "#/definitions/echo"
        }
      }
    },
    "Clear": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Clear": {
          "description": "Clear screen",
          "type": "null"
        }
      }
    },
    "DocGuideMD": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Doc/Guide/MD": {
          "required": [
            "includes",
            "includePattern",
            "outFile"
          ],
          "description": "Auto scan file to detect the comment format which is generated to markdown document",
          "type": "object",
          "properties": {
            "includes": {
              "description": "Only scan files in these locations",
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "src"
              ]
            },
            "excludes": {
              "description": "Scan files except these locations",
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "node_modules"
              ]
            },
            "includePattern": {
              "description": "Regex pattern to validate file name before scan it",
              "type": "string",
              "default": ".+\\.ts$"
            },
            "outFile": {
              "description": "Path of guideline file",
              "type": "string",
              "default": "GUIDE.md"
            },
            "pattern": {
              "type": "object",
              "description": "Mark a guideline block in code",
              "properties": {
                "begin": {
                  "type": "string",
                  "description": "Regex pattern to mark to begin store information"
                },
                "end": {
                  "type": "string",
                  "description": "Regex pattern to mark to end store information"
                }
              }
            }
          }
        }
      }
    },
    "time": {
      "$ref": "#/definitions/getVarNumberString",
      "examples": [
        "1000",
        "1000ms",
        "1s",
        "1m",
        "1h"
      ]
    },
    "allOfSteps": {
      "type": "array",
      "description": "Steps",
      "items": {
        "anyOf": [
          {
            "type": "string"
          },
          {
            "$ref": "#/definitions/Clear"
          },
          {
            "$ref": "#/definitions/DocGuideMD"
          },
          {
            "$ref": "#/definitions/Echo"
          },
          {
            "$ref": "#/definitions/Exec"
          },
          {
            "$ref": "#/definitions/File"
          },
          {
            "$ref": "#/definitions/Group"
          },
          {
            "$ref": "#/definitions/Pause"
          },
          {
            "$ref": "#/definitions/Script"
          },
          {
            "$ref": "#/definitions/Sleep"
          },
          {
            "$ref": "#/definitions/Templates"
          },
          {
            "$ref": "#/definitions/UserInput"
          },
          {
            "$ref": "#/definitions/Validate"
          },
          {
            "$ref": "#/definitions/Vars"
          }
        ]
      }
    },
    "functional": {
      "type": "string",
      "description": "JS code in a function"
    },
    "getVarBooleanString": {
      "description": "Eval string to object value",
      "type": [
        "string",
        "boolean"
      ]
    },
    "getVarNumberString": {
      "description": "Eval string to object value",
      "type": [
        "string",
        "number"
      ]
    },
    "getVarString": {
      "description": "Eval string to object value",
      "type": [
        "string"
      ]
    },
    "getVar": {
      "description": "Eval string to object value",
      "type": [
        "string",
        "number",
        "boolean"
      ]
    },
    "getVarAny": {
      "description": "Eval string to object value",
      "type": [
        "string",
        "number",
        "boolean",
        "object",
        "array",
        "null"
      ]
    },
    "logLevel": {
      "type": "string",
      "enum": [
        "trace",
        "debug",
        "info",
        "warn",
        "error",
        "slient"
      ]
    },
    "setVar": {
      "description": "Set value to a variable",
      "oneOf": [
        {
          "type": "string",
          "description": "Set value to this",
          "examples": [
            "${var2}"
          ],
          "default": "${varName}"
        },
        {
          "type": "object",
          "description": "Set a part of data to this"
        }
      ]
    },
    "fileAdapter": {
      "type": "array",
      "items": {
        "oneOf": [
          {
            "description": "Adapter name",
            "type": "string",
            "enum": [
              "Password",
              "Json",
              "Xml",
              "Yaml",
              "Csv",
              "Text"
            ]
          },
          {
            "description": "Adapter name and configuration",
            "type": "object"
          }
        ]
      }
    },
    "userinput": {
      "type": "object",
      "required": [
        "title",
        "var"
      ],
      "additionalProperties": false,
      "properties": {
        "...": "defaultAttrs",
        "title": {
          "$ref": "#/definitions/getVar",
          "description": "Question title"
        },
        "var": {
          "description": "Assign user input value to",
          "$ref": "#/definitions/setVar"
        },
        "required": {
          "description": "User input must be required",
          "$ref": "#/definitions/getVarBooleanString"
        },
        "pattern": {
          "description": "Pattern to validate",
          "$ref": "#/definitions/getVarString"
        },
        "format": {
          "type": "string",
          "examples": [
            "vl => vl.toUpperCase()"
          ]
        },
        "mask": {
          "type": "string",
          "examples": [
            "YYYY-MM-DD HH:mm:ss",
            "HH:mm:ss"
          ]
        },
        "type": {
          "description": "UserInput type",
          "enum": [
            "text",
            "password",
            "invisible",
            "number",
            "confirm",
            "toggle",
            "select",
            "multiselect",
            "autocompleteMultiselect",
            "autocomplete",
            "date"
          ]
        },
        "default": {
          "description": "Init value",
          "$ref": "#/definitions/getVar"
        },
        "choices": {
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "title",
              "value"
            ],
            "properties": {
              "title": {
                "$ref": "#/definitions/getVar"
              },
              "description": {
                "type": "string"
              },
              "value": {
                "$ref": "#/definitions/getVar"
              }
            }
          }
        }
      }
    }
  },
  "templates": {
    "defaultAttrs": {
      "async": {
        "description": "Run asynchronized",
        "$ref": "#/definitions/getVarBooleanString",
        "examples": [
          "true",
          "false",
          "${isAsync}"
        ]
      },
      "loop": {
        "description": "Conditional to check before loop steps. ($.loopValue, $.loopKey)",
        "$ref": "#/definitions/getVarAny",
        "examples": [
          "${[1,2,3,4]}",
          "${{key1: value1, key2: value2}}",
          "${list}",
          "${isRun}"
        ]
      },
      "logLevel": {
        "description": "How to show log",
        "$ref": "#/definitions/logLevel"
      },
      "delay": {
        "description": "Sleep in specific time before keep playing the next",
        "$ref": "#/definitions/time"
      },
      "if": {
        "description": "Check conditional to decide to run it or NOT",
        "$ref": "#/definitions/getVarBooleanString"
      },
      "->": {
        "description": "Expose for others extends",
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ]
      },
      "<-": {
        "description": "Extends others which is exposed by '->'",
        "oneOf": [
          {
            "type": "string"
          },
          {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        ]
      }
    }
  }
}